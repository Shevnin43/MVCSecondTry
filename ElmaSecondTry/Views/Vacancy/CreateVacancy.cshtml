@model ElmaSecondTry.Models.VacancyModel.MyVacancy


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Новое объявление Вакансии</h4>
        <hr />
        @Html.HiddenFor(model => model.OwnerLogin)
        <!--        Html.HiddenFor(model => model.Creator.Role)-->
        @Html.HiddenFor(model => model.Type)
        @Html.HiddenFor(model => model.IsBlocked)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.About, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.About, 5, 50, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Employment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Employment, new SelectList(ViewBag.Employments, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Employment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Requirement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Requirement, 5, 50, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Requirement, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValidDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" id="ValidDay" name="ValidDay" class="form-control" value=@Model.ValidDay.ToString("yyyy-MM-dd") />
                @Html.ValidationMessageFor(model => model.ValidDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-success" />
            </div>
        </div>
    </div>
}


